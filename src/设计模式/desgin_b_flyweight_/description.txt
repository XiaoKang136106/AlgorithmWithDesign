设计模式之 Flyweight(享元模式)<线程池>
			Flyweight 定义:
			运用共享技术有效地支持大量细粒度的对象
			避免大量拥有相同内容的小类的开销(如耗费内存),使大家共享一个类(元类).
			为什么使用?
			面向对象语言的原则就是一切都是对象,但是如果真正使用起来,有时对象数可能显得
			很庞大,比如,字处理软件,如果以每个文字都作为一个对象,几千个字,对象数就是几千,
			无疑耗费内存,那么我们还是要"求同存异",找出这些对象群的共同点,设计一个元类,封
			装可以被共享的类,另外,还有一些特性是取决于应用(context),是不可共享的,这也
			Flyweight 中两个重要概念内部状态 intrinsic 和外部状态 extrinsic 之分.
			说白点,就是先捏一个的原始模型,然后随着不同场合和环境,再产生各具特征的具体
			模型,很显然,在这里需要产生不同的新对象,所以 Flyweight 模式中常出现 Factory 模
			式.Flyweight 的内部状态是用来共享的,Flyweight factory 负责维护一个
			Flyweight pool(模式池)来存放内部状态的对象.
			Flyweight模式是一个提高程序效率和性能的模式,会大大加快程序的运行速度.应
			用场合很多:比如你要从一个数据库中读取一系列字符串,这些字符串中有许多是重复的,
			那么我们可以将这些字符串储存在Flyweight池(pool)中
			
			
			适用性

		    当都具备下列情况时，使用Flyweight模式：
		
		    1.一个应用程序使用了大量的对象。
		
		    2.完全由于使用大量的对象，造成很大的存储开销。
		
		    3.对象的大多数状态都可变为外部状态。
		
		    4.如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象。
		
		    5.应用程序不依赖于对象标识。由于Flyweight对象可以被共享，对于概念上明显有别的对象，标识测试将返回真值。