桥接模式:
		Bridge 模式定义 :
		将抽象和行为划分开来,各自独立,但能动态的结合。
		任何事物对象都有抽象和行为之分，例如人，人是一种抽象，人分男人和女人等；人有行为，
		行为也有各种具体表现，所以，“人”与“人的行为”两个概念也反映了抽象和行为之分。
		在面向对象设计的基本概念中，对象这个概念实际是由属性和行为两个部分组成的，属性我
		们可以认为是一种静止的，是一种抽象，一般情况下，行为是包含在一个对象中，但是，在
		有的情况下，我们需要将这些行为也进行归类，形成一个总的行为接口，这就是桥模式的用
		处。
		桥接模式就是把事物和其具体实现分开，使他们可以各自独立的变化。
		桥接的用意是：**将抽象化与实现化解耦，使得二者可以独立变化**，像我们常用的JDBC的DriverManager一样，JDBC进行连接[数据库](http://lib.csdn.net/base/14)的时候，在各个数据库之间进行切换，基本不需要动太多的代码，甚至丝毫不用动，
		原因就是JDBC提供统一接口，每个数据库提供各自的实现，用一个叫做数据库驱动的程序来桥接就行了
		为什么使用?
		不希望抽象部分和行为有一种固定的绑定关系，而是应该可以动态联系的。
		如果一个抽象类或接口有多个具体实现(子类、concrete subclass),这些子类之间关系
		可能有以下两种情况:
		1. 这多个子类之间概念是并列的,如前面举例,打桩,有两个 concrete class:方形桩和
		圆形桩;这两个形状上的桩是并列的,没有概念上的重复。
		2.这多个子类之中有内容概念上重叠.那么需要我们把抽象共同部分和行为共同部分各自
		独立开来,原来是准备放在一个接口里,现在需要设计两个接口：抽象接口和行为接口，分
		别放置抽象和行为
		
		
		适用性

	    1.你不希望在抽像和它的实现部分之间有一个固定的绑定关系。
	      例如这种情况可能是因为，在程序运行时刻实现部分应可以选择或者切换。
	
	    2.类的抽象以及它的实现都应该可以通*生成子类的方法加以扩充。
	      这时Bridge模式使你可以对不同的抽象接口和实现部分进行组合，并分别对它们进行扩充。
	
	    3.对一个抽象的实现部分的修改应对客户不产生影响，即客户的代码不必重新编译。
	
	    4.正如在意图一节的第一个类图中所示的那样，有许多类要生成。
	      这是一种类层次结构说明你必须将一个对象分解成两个部分。
	
	    5.设想在多个对象间共享实现（可能使用引用计数），但同时要求客户并不知道这一点。