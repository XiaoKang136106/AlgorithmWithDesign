 用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。(浅拷贝和深拷贝)
 用于创建重复的对象，同时又能保证性能

将一个对象作为原型，对其进行复制、克隆，产生一个和原对象类似的新对象
很简单，一个原型类，实现Cloneable接口，覆写clone方法，此处clone方法可以改成任意的名称
先需要了解对象深、浅复制的概念：

浅复制：将一个对象复制后，基本数据类型的变量都会重新创建，而引用类型，指向的还是原对象所指向的。

深复制：将一个对象复制后，不论是基本数据类型还有引用类型，都是重新创建的。
简单来说，就是深复制进行了完全彻底的复制，而浅复制不彻底。

* 原型模式:通过复制现有的对象实例来创建新的对象实例
 * 	 优点：
        1，使用原型模型创建一个对象比直接new一个对象更有效率，因为它直接操作内存中的二进制流，特别是复制大对象时，性能的差别非常明显。
        2，隐藏了制造新实例的复杂性，使得创建对象就像我们在编辑文档时的复制粘贴一样简单。(不会调用构造器的方法)
 *  场景:	
 *   1，复制对象的结构和数据。
 *   2，希望对目标对象的修改不影响既有的原型对象。
 *   3，创建一个对象的成本比较大